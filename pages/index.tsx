import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import useSWR, { useSWRConfig } from 'swr'
import { useState } from 'react'
import axios from 'axios'
import Link from 'next/link'
import { useRouter } from 'next/router'
import { apiURL, Obj } from '../unify/const'
const axiosBase = axios.create({
  baseURL: 'http://localhost:8080',
});

const Home: NextPage = ()=> {
  const fetcher = async (address: string) => {
    const res = await fetch(address);
    
    // もしステータスコードが 200-299 の範囲内では無い場合はエラーページに遷移する
    if (!res.ok) {
      router.push("/_error");
    }
    return res.json();
  }

  const router = useRouter();
  const { mutate } = useSWRConfig();
  const { data, error } = useSWR(apiURL, fetcher)
  const [ name, setName ] = useState('');
  const [ artist, setArtist ] = useState('');
  const [ reason, setReason ] = useState('');

  // 登録機能
  const sendRegister = ()=> {
    axiosBase.post(`/register?name=${name}&artist=${artist}&reason=${reason}`)
    .then((ret)=> {
      setName("");
      setReason("");
      setArtist("");
      // SWRがrefetchを行う
      mutate(apiURL);
    })
    // Go側でエラーがあった場合
    .catch(()=> {
      console.log("err")
      router.push("/_error");
    });
  };

  let datas;
  if(data){
    datas = data.map((value: Obj, key: number)=> {
      let detal_address = `/detal/?id=${value.ID}`;
      // keyはユニークIDとして付与している
      return <ul key={key}>
        <h1>{value.ID}番</h1>
        <p>曲名</p>
        <li>{value.name}</li>
        <p>歌手名</p>
        <p>おすすめポイント</p>
        <li>{value.reason}</li>
        <Link href={detal_address}>
          <a>詳細</a>
        </Link>
      </ul>
    })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <main className={styles.main}>
      <h1>投稿フォーム</h1>
        <label>曲名</label><br></br>
        <input type="text" name="name" value={name} onChange={(e) => setName(e.target.value)}/><br></br>
        <label>歌手名</label><br></br>
        <input type="text" name="content" value={artist} onChange={(e) => setArtist(e.target.value)}/><br></br>
        <label>おすすめポイント</label><br></br>
        <input type="text" name="content" value={reason} onChange={(e) => setReason(e.target.value)}/><br></br>
        <button type="submit" onClick={sendRegister}>送信</button><br></br>
        {data ? 
          <div>
            {datas}
          </div>
        :
          <p></p>
        }
      </main>
    </div>
  )
}

export default Home